db          > muestra en que base de datos nos ubicamos
show dbs    > lista las bases de datos que existen en mi servidor
use DB_NAME > crear y movernos a esa base de datos, si no existe la crea y si existe solamente nos movemos


-- COMANDOS PRACTICOS
-- Para insertar
db.personas.insertOne({ nombre: 'Eduardo', apellido: 'de Rivero', correo: 'ederiveroman@gmail.com' })
db.personas.intertMany( [ { nombre: 'Maria' }, { sexo: 'M', fechaNacimiento: new Date('1995-07-31') } ] )
db.personas.insertMany( [ { nombre: 'Maria' }, { sexo: 'M', fechaNacimiento: new Date('1995-07-31') } ] )
db.personas.insertOne({ nombre: 'Juan', sexo: 'M'})


-- Para buscar
-- SELECT * FROM personas;
db.personas.find()

-- Hacer busquedas mas especificas
db.personas.find({ $or: [ { nombre : 'Juan' }, { nombre: 'Eduardo' } ] } )


-- Insertar en la tabla productos los siguientes valores
[
    {
        nombre: 'piña',
        precio: 1.80,
        disponible: true
    },
    {
        nombre:'frambuesa',
        precio: 5.20,
        disponible: true
    },
    {
        nombre: 'pitahaya',
        precio: 4.50,
        disponible: false
    },
    {
        nombre: 'sauco',
        precio: 8.50,
        disponible: true
    }
]

-- Buscar todos los productos cuyo nombre sea 'pitahaya'
db.productos.find({nombre:'pitahaya' } )

-- Buscar todos los productos cuyo nombre sea 'frambuesa' o 'sauco'
db.productos.find({ $or: [ {nombre: 'frambuesa' } , { nombre: 'sauco' } ]} )

-- Buscar todos los productos cuyo nombre sea 'toronja' o 'piña' Y su precio sea mayor a 1.00
db.productos.find( { 
    $and : [ 
        { 
            $or: [ 
                { 
                    nombre: 'toronja' 
                }, 
                { 
                    nombre: 'piña' 
                } 
            ] , 
            precio: { 
                $gt: 1.00 
            } 
        } ] 
    } )


-- Buscar todos los productos que valgan menos de 5.00 y que esten disponibles 
-- Sin el operador $and

db.productos.find({
    precio: {
        $lt: 5.00
    },
    disponible: true
})

-- Con el operador $and

db.productos.find({
    $and:[{ 
        precio: {
            $lt: 5.00
        }
    },
    {
        disponible: true
    }]
})


-- Actualizaciones
-- primero va el valor a buscar y luego los campos a modificar con la llave $set
db.productos.updateOne({ nombre: 'piña'}, { $set: { precio: 5, disponible: false }} )


-- para actualizar varios registros
db.productos.updateMany({ precio: {$gt: 1 }}, { $set: {disponible: true }})


-- Eliminaciones
db.productos.deleteOne({ nombre: 'piña' })

-- para eliminar varios productos
db.productos.deleteMany({precio: { $gt: 1 } })

db.categorias.insertMany([
    {
        nombre: 'Abarrotes',
        descripcion: 'Todo relacionado a abarrotes',
        productos: [
            {
                nombre: 'Detergente ayudin',
                descripcion: 'A la grasa le pone fin',
                precio: 7.50
            },
            {
                nombre: 'Cepillo dental',
                descripcion: 'Poderoso Cepillo',
                precio: 1.80
            }
        ]
    },
    {
        nombre: 'Verduras',
        descripcion: 'Ricas verduras para la casa',
        productos: [
            {
                nombre: 'Beterraga',
                precio: 1.50,
                descripcion: null
            },
            {
                nombre: 'Cebolla china',
                precio: 2.80,
                descripcion: 'Cebolla 100% peruana'
            },
            {
                nombre: 'Zucchini',
                precio: 7.50,
                descripcion: 'Calabacin italiano'
            }
        ]
    }
])


-- Buscar todas las verduras cuyo precio sea mayor a 2.5 y solamente los productos con ese filtro
db.categorias.aggregate([
    { $match: {nombre: 'Verduras'}},
    { $unwind: '$productos'},
    { $match: {'productos.precio': {$gt: 2.5}}},
    { $group: {_id: '$_id', productos: {$push: '$productos'}}}
])