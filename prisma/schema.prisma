// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TIPO_USUARIO {
  ADMIN
  CLIENTE
}

model Usuario {
  id          Int          @id @default(autoincrement())
  nombre      String
  apellido    String
  correo      String       @unique
  password    String
  tipoUsuario TIPO_USUARIO @default(CLIENTE) @map("tipo_usuario")
  carrito     Carrito?

  @@map("usuarios")
}

model Carrito {
  id        Int            @id @default(autoincrement())
  usuarioId Int            @unique @map("usuario_id")
  usuario   Usuario        @relation(fields: [usuarioId], references: [id])
  items     ItemsCarrito[]

  @@map("carritos")
}

model Producto {
  id           Int            @id @default(autoincrement())
  nombre       String
  precio       Float
  precioOferta Float          @map("precio_oferta")
  disponible   Boolean        @default(true)
  descripcion  String?
  procedencia  String
  items        ItemsCarrito[]

  @@map("productos")
}

model ItemsCarrito {
  id         Int      @id @default(autoincrement())
  carrito    Carrito  @relation(fields: [carritoId], references: [id])
  carritoId  Int      @map("carrito_id")
  producto   Producto @relation(fields: [productoId], references: [id])
  productoId Int      @map("producto_id")
  cantidad   Int

  // Si queremos evitar utilizar una PK y utilizar dos o mas columnas como PK entonces usamos la propiedad @@id
  // @@id([carritoId, productoId])
  @@map("items_carritos")
}
